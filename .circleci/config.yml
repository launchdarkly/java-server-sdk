version: 2.1

orbs:
   win: circleci/windows@5.0.0

workflows:
  test:
    jobs:
      - build-linux
      - test-linux:
          name: Java 8 - Linux - OpenJDK
          docker-image: cimg/openjdk:8.0
          requires:
            - build-linux
      - test-linux:
          name: Java 11 - Linux - OpenJDK
          docker-image: cimg/openjdk:11.0
          requires:
            - build-linux
      - test-linux:
          # current LTS version
          name: Java 17 - Linux - OpenJDK
          docker-image: cimg/openjdk:17.0
          with-coverage: true
          requires:
            - build-linux
      - test-linux:
          name: Java 19 - Linux - OpenJDK
          docker-image: cimg/openjdk:19.0
          requires:
            - build-linux
      - packaging:
          requires:
            - build-linux
      - benchmarks:
          requires:
            - build-linux
# Windows Java 11 build is temporarily disabled - see story 171428
#      - test-windows:
#          name: Java 11 - Windows - OpenJDK
#          openjdk-version: 11.0.2.01
      - build-test-windows:
          name: Java 17 - Windows - OpenJDK
          openjdk-version: 17.0.1

jobs:
  build-linux:
    docker:
      - image: cimg/openjdk:8.0
    steps:
      - checkout
      - run: cp gradle.properties.example gradle.properties
      - run: java -version
      - run: ./gradlew dependencies
      - run: ./gradlew jar
      - persist_to_workspace:
          root: build
          paths:
            - classes

  test-linux:
    parameters:
      docker-image:
        type: string
      with-coverage:
        type: boolean
        default: false
    docker:
      - image: <<parameters.docker-image>>
        environment:
          TEST_HARNESS_PARAMS: -junit /home/circleci/junit/contract-tests-junit.xml
    steps:
      - checkout
      - run: cp gradle.properties.example gradle.properties
      - attach_workspace:
          at: build
      - run: java -version
      - run:
          name: Run tests
          command: ./gradlew test
      - when:
          condition: <<parameters.with-coverage>>
          steps:
            - run:
                name: Generate test coverage report
                command: |
                  ./gradlew jacocoTestReport
                  mkdir -p coverage/
                  cp -r build/reports/jacoco/test/* ./coverage
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - run: make build-contract-tests
      - run:
          command: make start-contract-test-service
          background: true
      - run: make run-contract-tests

      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - when:
          condition: <<parameters.with-coverage>>
          steps:
            - store_artifacts:
                path: coverage

  build-test-windows:
    parameters:
      openjdk-version:
        type: string
    executor:
      name: win/server-2019
    steps:
      - checkout
      - run:
          name: uninstall previous openjdk
          command: choco uninstall openjdk -y
      - run:
          name: install OpenJDK
          command: |
            $ProgressPreference = "SilentlyContinue"  # prevents console errors from CircleCI host
            choco install openjdk --version <<parameters.openjdk-version>> --allow-downgrade -y
      - run: java -version
      - run:
          name: build and test
          command: |
            cp gradle.properties.example gradle.properties
            .\gradlew.bat --no-daemon test  # must use --no-daemon because CircleCI in Windows will hang if there's a daemon running
      - run:
          name: save test results
          command: |
            mkdir .\junit
            cp build/test-results/test/*.xml junit -ErrorAction SilentlyContinue
          when: always
      - store_test_results:
          path: .\junit
      - store_artifacts:
          path: .\junit

  packaging:
    docker:
      - image: cimg/openjdk:8.0
    steps:
      - run: java -version
      - run: sudo apt-get install make -y -q
      - checkout
      - attach_workspace:
          at: build
      - run: cat gradle.properties.example >>gradle.properties
      - run:
          name: checkstyle/javadoc
          command: ./gradlew javadoc checkstyleMain
      - run:
          name: build all SDK jars
          command: ./gradlew publishToMavenLocal -P LD_SKIP_SIGNING=1
      - run:
          name: run packaging tests
          command: cd packaging-test && make all

  benchmarks:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run: java -version
      - run: sudo apt-get install make -y -q
      - checkout
      - attach_workspace:
          at: build
      - run: cat gradle.properties.example >>gradle.properties
      - run:
          name: run benchmarks
          command: cd benchmarks && make
      - store_artifacts:
          path: benchmarks/build/reports/jmh
